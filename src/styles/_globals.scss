@use "mixins";

// hide undefined custom elements
:not(:defined) {
	visibility: hidden;
}

// expand abbreviations on devices without mouse
:where(abbr[title]) {
	@include mixins.onTouch {
		text-decoration-color: transparent;

		&::after {
			content: " (" attr(title) ")";
			color: var(--x2-color-body-subtle);
		}
	}
}

:where(figcaption) {
	position: relative;
	padding: 0 0 0 var(--x2-padding-inline-figcaption, 1.5em);

	&::before {
		position: absolute;
		content: "";
		left: 0;
		inline-size: 1ch;
		block-size: 100%;
		border-radius: var(--x2-radius-max);
		background-color: var(--x2-border-note);
	}
}

// clipboard-copy is a button
:where(clipboard-copy) {
	background-color: var(--x2-bg-form);
	border: var(--x2-line-width-sm) solid var(--x2-border-form);
	color: var(--x2-color-form);
}

::part(button), ::part(link) {
	cursor: pointer;
	touch-action: manipulation;
	-webkit-tap-highlight-color: transparent;
}

:where(theme-switcher, command-bar)::part(button) {
	padding: 0.4rem;
	border-radius: var(--x2-radius-sm);
}

.brand {
	--brandSize: calc(30px + 0.5vw);
	display: inline-block;
	@include mixins.fixedSize(var(--brandSize));
}

.glitch {
	display: flex;
	align-items: center;
	justify-content: center;
	padding: var(--x2-padding-inline-body);

	figure {
		.glitch-headline {
			color: var(--x2-color-body-emphasis);
		}

		figcaption {
			font-style: normal;
			font-size: 1em;
			@include mixins.flow;
		}

		img {
			filter: drop-shadow(0 0 5rem var(--x2-border-deter));

			@media (prefers-reduced-motion: no-preference) {
				animation: flicker 5s linear infinite;
			}
		}
	}
}

@keyframes flicker {
	0%, 19.999%, 22%, 62.999%, 64%, 64.999%, 70%, 100% {
		opacity: .99;
		
	}
	20%, 21.999%, 63%, 63.999%, 65%, 69.999% {
		opacity: 0.4;
	}
}
