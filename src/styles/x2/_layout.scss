@use "vars" as *;
@use "mixins";

body {
	--bodyPopout: minmax(0, 1fr);
	--bodyGap: minmax(#{$x2-gap-body}, 1fr);
	--bodyCopy: min(var(--x2-max-width-body), 100% - #{$x2-gap-body * 2});

	display: grid;
	grid-template-columns:
		[bodyPopout-start] var(--bodyPopout)
		[bodyGap-start] var(--bodyGap)
		[bodyCopy-start] var(--bodyCopy) [bodyCopy-end]
		var(--bodyGap) [bodyGap-end]
		var(--bodyPopout) [bodyPopout-end];

	& > * {
		grid-column: bodyCopy;
	}

	& > #content,
	& > .popout {
		grid-column: bodyPopout;
	}
}

.content {
	--contentPopout: minmax(0, 1fr);
	--contentGap: #{$x2-gap-body};
	--contentCopy: min(var(--x2-max-width-content), 100% - #{$x2-gap-body * 2});

	display: grid;
	grid-template-columns:
		[contentPopout-start] var(--contentPopout)
		[contentGap-start] var(--contentGap)
		[contentCopy-start] var(--contentCopy) [contentCopy-end]
		var(--contentGap) [contentGap-end]
		var(--contentPopout) [contentPopout-end];
	
	& > * {
		grid-column: contentCopy;
	}

	& > .popout {
		grid-column: contentGap;
	}

	@include mixins.flow;
}

body > * + *:not(.hero) {
	margin-block-start: #{$x2-gap-massive};
}

body > .header {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: space-between;
	gap: 1ch;
	margin-block: #{$x2-gap-body};

	.brand {
		display: inline-block;
	}

	.navbar-secondary {
		display: flex;
		align-items: center;
		gap: 1.5rem;
	}
}

.hero {
	--heroItemGap: 1em;
	margin-block-start: var(--heroItemGap);

	&-body,
	&-footer {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		gap: var(--heroItemGap);
	}

	@include mixins.flow;

	&-header {
		font-size: var(--x2-text-sm);
	}

	&-footer {
		--heroItemGap: 0;
		font-size: var(--x2-text-sm);

		.icon {
			--x2-size-icon: 1.25rem;
			color: var(--x2-color-accent);
			margin-inline-end: 0.5ch;
		}

		time {
			margin-inline-start: 0.5ch;
		}

		& > * {
			display: inline-flex;
			align-items: center;

			&:not(:last-child)::after {
				@include mixins.icon("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='15' r='1'/%3E%3C/svg%3E");
				display: inline-block;
				@include mixins.size(1em);
				opacity: 0.5;
			}
		}
	}

	.hero-header + .hero-body {
		margin-block-start: 1em;
	}

	.avatar {
		inline-size: calc(56px + 4vw);
		border-radius: var(--x2-radius-max);
	}
}

body > .footer {
	position: sticky;
	top: 100vh;
	margin-block-end: #{$x2-gap-massive};
	padding-block: calc(1rem + 5vw);
	--x2-gap-flow: 3rem;
	@include mixins.flow;

	.intro .quote {
		text-align: end;
		color: var(--x2-color-body-subtle);

		p {
			font-family: var(--x2-font-fancy);
			font-size: var(--x2-text-title);
			text-wrap: balance;

			&::before {
				content: open-quote;
				opacity: 0.5;
			}

			&::after {
				content: close-quote;
				opacity: 0.5;
			}
		}
	}

	.info,
	.outro {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		gap: 2ch;
		font-size: var(--x2-text-sm);
	}

	.info {
		& > * {
			margin-inline-start: 2rem;
			flex-grow: 1;
			position: relative;
		}

		li {
			--x2-gap-flow: 0;
		}

		.icon {
			position: absolute;
			margin-inline-start: -2rem;
		}
	}

	.outro {
		align-items: center;

		.socials,
		.extras {
			display: flex;
			align-items: center;
			gap: 1em;
		}
	}
}

.recs {
	font-weight: var(--x2-text-semibold);
	@include mixins.flow;
	
	.rec {
		position: relative;
		margin-inline-start: 2rem;
	}

	.hint {
		font-size: var(--x2-text-sm);
	}

	a {
		font-size: var(--x2-text-tagline);
	}

	.icon {
		position: absolute;
		margin-inline-start: -2rem;
		color: var(--x2-color-caption);
	}
}

.sidekick {
	&-items {
		display: flex;
		align-items: center;
		justify-content: center;
		flex-wrap: wrap;
		gap: 1ch;
	}

	&-panels {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: space-between;
		gap: 1em;
	}
}
