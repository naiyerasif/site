@use "vars" as *;
@use "mixins";

// clipboard-copy is a button
:where(clipboard-copy) {
	background-color: var(--x2-bg-form);
	border: var(--x2-line-width-sm) solid var(--x2-border-form);
	color: var(--x2-color-form);
}

:where(clipboard-copy, command-bar, theme-switcher, footer-preferences):not(:defined) {
	visibility: hidden;
	display: none;
}

:where(command-bar) {
	dialog {
		width: calc(100% - 2px);
		max-width: var(--x2-max-width-content);
		overflow: hidden;
		border: var(--x2-line-width-sm) solid var(--x2-border-body);
		border-radius: var(--x2-radius-0);
		background-color: var(--x2-bg-body);
		padding: 0;

		header {
			display: flex;
			align-items: center;
			gap: 1ch;
			padding: 0.5rem;
		}

		input[autofocus] {
			flex: 1;
		}

		#commands {
			max-block-size: 60vh;
			overflow-y: auto;
		}

		.cmdb-section-header {
			border-block-start: var(--x2-line-width-sm) solid var(--x2-border-note);
			font-size: 0.8em;
			color: var(--x2-color-body-subtle);
			padding: 0.25rem 1rem;
		}

		.command-item {
			display: flex;
			align-items: center;
			padding: 0.75rem 1rem;

			&:focus,
			&:hover {
				background-color: var(--x2-bg-accent-subtle);
			}

			&:focus-visible {
				outline-offset: -0.25em;
			}

			.icon {
				margin-inline-end: 1ch;
			}
		}
	}
}

.icon-btn {
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 0.3rem;
	border-radius: var(--x2-radius-sm);
}

.toc {
	&-header {
		text-transform: uppercase;
		letter-spacing: 0.025em;
		color: var(--x2-color-caption);
		font-size: var(--x2-text-sm);
	}

	&-items {
		--x2-gap-flow: 0;
		list-style-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='%237e9688' opacity='0.7' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M15 6v10c0 1.097.903 2 2 2h6'/%3E%3C/svg%3E");
		padding: 0;

		li {
			--x2-gap-flow: 0;
		}
	}

	&-item {
		$levels: 2 3 4 5 6;

		@each $level in $levels {
			&.toc-item-#{$level} {
				margin-inline-start: 1em;
			}
		}
	}
}

.distinct-link {
	--distinctLinkPadding: var(--x2-padding-distinct-link, 1ch 2ch);
	--distinctLinkBorderWidth: var(--x2-line-width-distinct-link, var(--x2-line-width-0));
	display: inline-flex;
	align-items: center;
	border: var(--distinctLinkBorderWidth) dotted currentColor;
	border-radius: var(--x2-radius-max);
	padding: var(--distinctLinkPadding);
	gap: 0.5ch;

	&:is(:hover, :focus, :active) {
		border-style: solid;
	}

	&:focus-visible {
		border-color: transparent;
	}
}

.pagination {
	&-item {
		min-inline-size: 4ch;
		justify-content: center;

		&.distinct-link {
			--x2-padding-distinct-link: 0.2ch 1ch;
			--x2-line-width-distinct-link: var(--x2-line-width-0);
			border-color: transparent;
			font-size: 1em;

			&:is(:hover, :focus, :active) {
				border-color: currentColor;
			}

			&:focus-visible {
				border-color: transparent;
			}
		}

		&.active {
			font-weight: var(--x2-text-semibold);
			border-color: currentColor;
		}
	}

	&-separator {
		opacity: 0.7;
	}
}

.capitalized {
	text-transform: capitalize;
}

.breadcrumb {
	display: inline-flex;
	align-items: center;

	&-item + &-item {
		&::before {
			margin-inline: 0.5ch;
			vertical-align: middle;
			@include mixins.icon("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M16 2 8 22'/%3E%3C/svg%3E");
			opacity: 0.5;
			display: inline-block;
			user-select: none;
			@include mixins.size(1em);
		}
	}
}

.card {
	--x2-gap-flow: 1em;
	padding-block: 3rem;

	&:not(:first-child) {
		background: radial-gradient(
			ellipse var(--x2-max-width-content) 240px at top,
			var(--x2-bg-separator), transparent
		);
	}

	&:first-child {
		padding-block-start: 0;
	}

	&:last-child {
		padding-block-end: 0;
	}

	& + & {
		border-block-start: var(--x2-line-width-sm) solid var(--x2-border-note);
	}

	&-details {
		display: flex;
		align-items: center;
		gap: 1ch;
		color: var(--x2-color-body-subtle);
		font-size: var(--x2-text-sm);
	}

	&-type {
		@extend .capitalized;
	}

	&-header {
		font-size: var(--x2-text-tagline);
		font-weight: var(--x2-text-semibold);
		text-wrap: balance;
		font-variation-settings: "opsz" 28;
	}

	&:not(.status) &-body {
		font-size: var(--x2-text-sm);
	}

	&.status &-details a {
		display: inline-flex;
	}
}

.share-panel,
.action-panel {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: 1rem;

	a {
		display: inherit;
		align-items: inherit;
		gap: 0.5ch;
	}
}

.share-panel .share-button {
	border-color: transparent;
	background-color: transparent;
	padding: 0;
}

.greeting span[data-language] {
	position: relative;

	&::after {
		position: absolute;
		content: attr(data-language);
		bottom: 3ch;
		right: 0;
		font-size: 0.6em;
		text-transform: lowercase;
		color: var(--x2-color-warn);
		background-color: var(--x2-border-warn);
		border: var(--x2-line-width-sm) solid var(--x2-border-warn);
		border-radius: var(--x2-radius-max);
		padding: 0.3ch 0.6ch;
		line-height: 1;
	}
}

.floating-back-to-top {
	--backToTopPos: 1rem;
	position: fixed;
	inset-block-end: var(--backToTopPos);
	inset-inline-end: var(--backToTopPos);
	z-index: 10;
	
	a {
		@extend .icon-btn;
		-webkit-backdrop-filter: blur(25px);
		backdrop-filter: blur(25px);
		border-radius: var(--x2-radius-max);
	}
}

.glitch {
	display: flex;
	align-items: center;
	justify-content: center;

	.brand {
		margin-block-end: 1ch;
		@include mixins.size(3rem);

		@mixin whenAnimated {
			animation: flicker 5s linear infinite;
		}
	}
}

@keyframes flicker {
	0%, 19.999%, 22%, 62.999%, 64%, 64.999%, 70%, 100% {
		opacity: .99;
		
	}
	20%, 21.999%, 63%, 63.999%, 65%, 69.999% {
		opacity: 0.4;
	}
}
