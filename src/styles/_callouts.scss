@use "sass:math";
@use "mixins";

.callout {
	--calloutFg: var(--x3-fg-callout, var(--x3-fg-note));
	--calloutBg: var(--x3-bg-callout, var(--x3-bg-note));
	--calloutBorderRadius: var(--x3-radius-xs);
	--calloutBorder: var(--x3-border-width-sm) solid var(--x3-border-callout, var(--x3-border-note));

	position: relative;
	display: flex;
	gap: 0.5rem;
	padding: 1ch;
	border: var(--calloutBorder);
	border-radius: var(--calloutBorderRadius);

	* {
		--x3-gap-flow: 0.5em;
	}

	&::before {
		content: "";
		position: absolute;
		@include mixins.size(100%);
		background-color: var(--calloutBg);
		border-radius: var(--x3-radius-max);
		filter: blur(5rem);
		z-index: -1;
		top: 0;
		left: 0;
		opacity: var(--x3-bg-callout-opacity);
	}

	&-hint,
	&-content &-title *,
	&-content > :first-child {
		color: var(--calloutFg);
	}

	&-hint {
		display: flex;
		align-items: start;
		flex: none;
		padding-block-start: 0.2ch;
	}

	&-content {
		flex-grow: 1;
	}

	&-commend {
		--x3-fg-callout: var(--x3-fg-commend);
		--x3-bg-callout: var(--x3-bg-commend);
		--x3-border-callout: var(--x3-border-commend);
	}

	&-assert {
		--x3-fg-callout: var(--x3-fg-assert);
		--x3-bg-callout: var(--x3-bg-assert);
		--x3-border-callout: var(--x3-border-assert);
	}

	&-warn {
		--x3-fg-callout: var(--x3-fg-warn);
		--x3-bg-callout: var(--x3-bg-warn);
		--x3-border-callout: var(--x3-border-warn);
	}

	&-deter {
		--x3-fg-callout: var(--x3-fg-deter);
		--x3-bg-callout: var(--x3-bg-deter);
		--x3-border-callout: var(--x3-border-deter);
	}

	&.setup &-content {
		li {
			--x3-gap-flow: 0;
		}
	}
}
