@use "mixins";

.callout {
	--calloutBgColor: var(--x2-bg-callout, var(--x2-bg-note));
	--calloutColor: var(--x2-color-callout, var(--x2-color-body));
	--calloutBorderColor: var(--x2-border-callout, var(--x2-border-note));
	--calloutBorderWidth: var(--x2-line-width-lg);
	--calloutContentPadding: var(--x2-padding-callout-content, 1em);
	--x2-size-icon: 1.25em;

	background-color: var(--calloutBgColor);
	border: var(--calloutBorderWidth) solid var(--calloutBorderColor);
	border-radius: var(--x2-radius-0);

	&-indicator {
		display: flex;
		gap: 0.5ch;
		color: var(--calloutColor);
		background-color: var(--calloutBorderColor);
		padding: 0 0 var(--calloutBorderWidth);
		font-size: 0.9em;
	}

	&-hint {
		display: flex;
		align-items: center;
	}

	&-content {
		--x2-gap-flow: 1em;
		padding: var(--calloutContentPadding);
		border-image: 
			radial-gradient(#0000 71%, var(--calloutBorderColor) 72%)
			49.9%/var(--x2-radius-sm);
		@include mixins.flow;
	}

	&.quote {
		.callout-content {
			color: var(--calloutColor);
			font-size: 1.125em;
		}
	}

	&.sm {
		.callout-content {
			font-size: 0.9em;

			li {
				--x2-gap-flow: 0;
			}
		}
	}
}

.callout-commend {
	--x2-bg-callout: var(--x2-bg-commend);
	--x2-color-callout: var(--x2-color-commend);
	--x2-border-callout: var(--x2-border-commend);
}

.callout-warn {
	--x2-bg-callout: var(--x2-bg-warn);
	--x2-color-callout: var(--x2-color-warn);
	--x2-border-callout: var(--x2-border-warn);
}

.callout-deter {
	--x2-bg-callout: var(--x2-bg-deter);
	--x2-color-callout: var(--x2-color-deter);
	--x2-border-callout: var(--x2-border-deter);
}

.callout-assert {
	--x2-bg-callout: var(--x2-bg-assert);
	--x2-color-callout: var(--x2-color-assert);
	--x2-border-callout: var(--x2-border-assert);
}
