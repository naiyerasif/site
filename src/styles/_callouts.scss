@use "mixins";

.callout {
	--calloutFg: var(--x3-fg-callout, var(--x3-fg-note));
	--calloutBg: var(--x3-bg-callout, var(--x3-bg-note));
	--calloutBorderColor: var(--x3-border-callout, var(--x3-border-note));
	--calloutBorderRadius: var(--x3-radius-max);

	margin-inline-start: 0.55rem;
	padding-inline-start: 1.25rem;
	position: relative;
	background-image: radial-gradient(at right top, var(--calloutBg), transparent 60%, transparent);
	border-start-end-radius: var(--x3-radius-xs);

	&::before {
		position: absolute;
		content: "";
		left: 0;
		bottom: 0;
		inline-size: 0.25rem;
		block-size: calc(100% - 2rem);
		border-radius: var(--calloutBorderRadius);
		background-color: var(--calloutBorderColor);
	}

	* {
		--x3-gap-flow: 0.5em;
	}

	.icon {
		position: absolute;
		left: -0.6rem;
		top: 0.25ch;
		color: var(--calloutFg);
	}

	.icon + &-content > :first-child,
	&-title * {
		color: var(--calloutFg);
	}

	&-commend {
		--x3-fg-callout: var(--x3-fg-commend);
		--x3-bg-callout: var(--x3-bg-commend);
		--x3-border-callout: var(--x3-border-commend);
	}

	&-assert {
		--x3-fg-callout: var(--x3-fg-assert);
		--x3-bg-callout: var(--x3-bg-assert);
		--x3-border-callout: var(--x3-border-assert);
	}

	&-warn {
		--x3-fg-callout: var(--x3-fg-warn);
		--x3-bg-callout: var(--x3-bg-warn);
		--x3-border-callout: var(--x3-border-warn);
	}

	&-deter {
		--x3-fg-callout: var(--x3-fg-deter);
		--x3-bg-callout: var(--x3-bg-deter);
		--x3-border-callout: var(--x3-border-deter);
	}

	&.setup &-content {
		li {
			--x3-gap-flow: 0;
			font-variant-numeric: tabular-nums lining-nums;
		}
	}
}
