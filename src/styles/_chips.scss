@use "mixins";

.chip {
	--y-icon-size: 1.25em;
	--z-chip-color: var(--y-chip-color, var(--y-note-color));
	--z-chip-bg-color: var(--y-chip-bg-color, var(--y-note-canvas-color));
	--z-chip-padding-block: 0;
	--z-chip-padding-inline: 0.8ch;
	--z-chip-padding: var(--z-chip-padding-block) var(--z-chip-padding-inline);
	--z-chip-padding-offset: calc((var(--z-chip-padding-block) - var(--z-chip-padding-inline)) / 2);
	
	display: inline-flex;
	align-items: center;
	gap: 0.5ch;
	@include mixins.texture;
	background-color: var(--z-chip-bg-color);
	color: var(--z-chip-color);
	border-radius: 0.5em;
	padding: var(--z-chip-padding);

	svg:first-child {
		margin-inline-start: var(--z-chip-padding-offset);
	}

	svg:last-child {
		margin-inline-end: var(--z-chip-padding-offset);
	}

	&-note {
		--y-chip-color: var(--y-note-color);
		--y-chip-bg-color: var(--y-note-canvas-color);
	}

	&-commend {
		--y-chip-color: var(--y-commend-color);
		--y-chip-bg-color: var(--y-commend-canvas-color);
	}

	&-warn {
		--y-chip-color: var(--y-warn-color);
		--y-chip-bg-color: var(--y-warn-canvas-color);
	}

	&-deter {
		--y-chip-color: var(--y-deter-color);
		--y-chip-bg-color: var(--y-deter-canvas-color);
	}

	&-assert {
		--y-chip-color: var(--y-assert-color);
		--y-chip-bg-color: var(--y-assert-canvas-color);
	}
}
