/*! based on Prose v0.0.7 | MIT License | https://github.com/Microflash/prose */
@mixin selection {
	background: var(--background-site-selection);
}

::-moz-selection {
	@include selection;
}

::selection {
	@include selection;
}

::placeholder {
	color: var(--color-site-placeholder);
	opacity: 0.54;
}

::marker {
	color: var(--color-site-marker);
}

:where(button, button[type], input:not([type="file"]), select, summary, textarea, [role="button"], [onclick]),
:where(input[type="file"])::file-selector-button,
::part(button),
::part(input) {
	&:is(:focus, :focus-visible, :focus-within, :hover, :active) {
		outline-color: var(--color-site-outline-form);
		outline-style: solid;
		outline-width: var(--thickness-site-outline-form);
		outline-offset: 0;
	}
}

:where(a[href], area, [tabindex]:not([tabindex*="-"])):focus-visible {
	outline-color: currentColor;
	outline-style: solid;
	outline-width: var(--thickness-site-outline-interaction);
	outline-offset: var(--offset-site-outline-interaction);
}

:is(
	::-webkit-calendar-picker-indicator,
	::-webkit-clear-button,
	::-webkit-inner-spin-button,
	::-webkit-outer-spin-button
) {
	color: var(--color-site-accent);
}

* {
	box-decoration-break: clone;
	text-decoration-thickness: var(--thickness-site-body);
	text-underline-position: from-font;
	text-decoration-skip-ink: auto;
	accent-color: var(--color-site-accent);
	caret-color: var(--color-site-accent);

	scrollbar-color: var(--color-site-scrollbar) var(--background-site-scrollbar);

	&::-webkit-scrollbar,
	&::-webkit-scrollbar-track {
		background-color: var(--background-site-scrollbar);
	}

	&::-webkit-scrollbar-thumb {
		background-color: var(--color-site-scrollbar);
	}
}

:where(body) {
	font-family: var(--family-site-body);
	font-size: var(--text-site-base);
	font-weight: var(--font-weight-site-regular);
	font-kerning: normal;
	text-rendering: optimizeLegibility;
	background-color: var(--background-site-body);
	color: var(--color-site-body);
	// See https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling
	-webkit-overflow-scrolling: touch;
}

:where(a) {
	color: var(--color-site-interaction);
	text-decoration-line: underline;
	text-decoration-style: dotted;

	* {
		color: currentColor;
	}

	&:is(:focus, :focus-within, :hover) {
		text-decoration-style: solid;
		text-decoration-thickness: var(--thickness-site-outline-interaction);
	}

	&:active {
		text-decoration-style: double;
	}

	&:focus-visible {
		text-decoration-color: transparent;
		border-radius: var(--radius-site-body);
	}
}

:where(cite, dfn) {
	font-style: italic;
}

:where(blockquote) {
	position: relative;
	padding: 0 0 0 1em;

	&::before {
		position: absolute;
		content: "";
		left: 0;
		inline-size: 0.5ch;
		block-size: 100%;
		border-radius: var(--radius-site-round);
		background-color: var(--border-site-blockquote);
	}

	* {
		--gap-site-vertical: 1rem;
	}
}

:where(hr) {
	display: block;
	border: none;
	block-size: var(--thickness-site-hr);
	background-color: transparent;
	background-image: radial-gradient(circle, var(--border-site-hr) 1px, transparent 1px);
	background-size: 8px 1px;
	background-repeat: repeat;
}

:where(hr + *, * + hr) {
	margin-block-start: calc(var(--gap-site-body) * 2.5);
}

:where(mark, del, ins) {
	border-radius: var(--radius-site-body);
	padding-inline: 0.5ch;
}

:where(del) {
	background-color: var(--background-site-del);
	color: var(--color-site-del);
	text-decoration-line: line-through;
}

:where(ins) {
	background-color: var(--background-site-ins);
	color: var(--color-site-ins);
}

:where(mark) {
	color: var(--color-site-mark);
	background-color: var(--background-site-mark);
	text-decoration-line: underline;
	text-decoration-color: var(--color-site-mark);
	text-decoration-style: double;
}

:where(i, em) {
	color: var(--color-site-stress);
}

:where(b, strong) {
	font-weight: var(--font-weight-site-semibold);
	color: var(--color-site-stress);
}

:where(small) {
	font-size: 0.9em;
}

:where(sub, sup) {
	font-size: 0.8em;
	line-height: 0;
	vertical-align: baseline;
}

:where(sub) {
	vertical-align: sub;
}

:where(sup) {
	vertical-align: super;
}

:where(var) {
	letter-spacing: 0.1ch;
}

:where(details) {
	--radius-site-details: calc(var(--radius-site-body) + 0.5em);

	display: block;
	border: 1px solid var(--border-site-body);
	border-radius: var(--radius-site-details);
	padding: 0 0.75em 0;

	summary {
		background-color: var(--background-site-interaction);
		margin: 0 -0.75em 0;
		padding: 0.25em 0.75em;
		border-radius: var(--radius-site-details);
		cursor: pointer;

		&:focus-visible {
			border-radius: var(--radius-site-details);
		}
	}

	&[open] {
		padding-block-end: 0.5em;

		summary {
			margin-block-end: 0.5em;
			border-block-end: 1px solid var(--border-site-body);
			border-end-start-radius: 0;
			border-end-end-radius: 0;
		}
	}

	&:not([open]) > *:not(summary) {
		display: none;
	}
}

:where(img) {
	border-radius: var(--radius-site-body);
}

:where(figure) {
	text-align: center;

	* {
		--gap-site-vertical: 1rem;
		margin-inline: auto;
	}
}

:where(figcaption, caption) {
	font-size: 0.8em;
	color: var(--color-site-caption);
}

:where(p:empty) {
	display: none;
}

:is(h1, h2, h3, h4, h5, h6) {
	font-weight: var(--font-weight-site-semibold);
	// enable optical sizing
	font-variation-settings: "opsz" 28;
	color: var(--color-site-stress);
}

:is(h2 + *, h3 + *, h4 + *, h5 + *, h6 + *) {
	margin-block-start: 1.5em;
}

:is(* + h2, * + h3, * + h4, * + h5, * + h6) {
	margin-block-start: 2em;
}

:where(h1) {
	font-size: 2.5rem;
}

:where(h2) {
	font-size: 2rem;
}

:where(h3) {
	font-size: 1.5rem;
	opacity: 0.85;
}

:where(h4) {
	font-size: 1.25rem;
	opacity: 0.8;
}

:where(h5) {
	font-size: 1.125rem;
	opacity: 0.75;
}

:where(h6) {
	font-size: 0.95rem;
	opacity: 0.7;
}

:where(ol, ul) {
	list-style-position: outside;
}

:where(li) {
	& + li,
	& > * + * {
		margin-block-start: calc(var(--gap-site-body) * 0.3);
	}
}

:where(dd) {
	margin-inline-start: 2ch;
}

:where(dt) {
	font-weight: var(--font-weight-site-semibold);
}

:where(code, kbd, samp, tt, pre) {
	font-family: var(--family-site-code);
	font-size: 0.95em;
	border-radius: var(--radius-site-body);
}

:where(code, kbd, samp, tt) {
	background-color: var(--background-site-code);
	padding-inline: 0.5ch;
}

:where(pre) {
	overflow: hidden;
	border-radius: var(--radius-site-pre);

	code {
		display: block;
		background: none;
		overflow: auto;
		border: none;
		padding: 1em 1.2em;
		font-size: 0.95em;
		white-space: pre;
	}
}

:where(table) {
	display: block;
	inline-size: 100%;
	overflow-x: auto;

	pre {
		white-space: pre-wrap;
	}
}

:where(th) {
	font-weight: var(--font-weight-site-semibold);
}

:where(th, td) {
	font-size: 1em;
	padding: 0.25rem 0.75rem;
	border: 1px solid var(--border-site-body);
}

:where(thead, tfoot) {
	tr {
		background-color: var(--background-site-table-active);
	}

	th,
	td {
		color: var(--color-site-table-active);

		code {
			background-color: var(--background-site-table);
		}
	}
}

:where(tbody) {
	tr {
		background-color: var(--background-site-table);
	}
}

:where(button, button[type], input:not([type="file"]), select, textarea, [role="button"]),
:where(input[type="file"])::file-selector-button,
::part(button),
::part(input) {
	background-color: var(--background-site-interaction);
	border-radius: var(--radius-site-form);
	border-color: var(--border-site-interaction);
	border-style: solid;
	border-width: var(--thickness-site-hr);
	padding: 0.2rem 0.5rem;
}

:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"], select),
:where(input[type="file"])::file-selector-button,
::part(button) {
	color: var(--color-site-interaction);
}

:where(input[type="file"], input[type="color"]) {
	padding: 0.3rem;
}

:where(fieldset) {
	border-radius: var(--radius-site-form);
	border-color: var(--border-site-body);
	border-style: solid;
	border-width: var(--thickness-site-hr);
}

:where(
	address,
	aside, figure,
	p, pre, blockquote, table,
	img, canvas, audio, video, iframe, embed, object,
	dl, ol, ul,
	fieldset, form, progress, textarea
):not(:last-child, :only-child) {
	margin-block-end: var(--gap-site-vertical);
}
