@use "mixins";
/*! Prose v2.0.0 | MIT License */
@mixin selection {
	background: var(--x2-bg-selection);
}

::-moz-selection {
	@include selection;
}

::selection {
	@include selection;
}

::placeholder {
	color: inherit;
	opacity: 0.54;
}

::marker {
	color: var(--x2-color-marker);
}

:focus-visible {
	border-radius: var(--x2-radius-outline, var(--x2-radius-xxs));
	outline-color: var(--x2-color-outline, currentColor);
	outline-style: solid;
	outline-width: var(--x2-line-width-md);
	outline-offset: var(--x2-outline-offset);
}

* {
	box-decoration-break: clone;
	text-underline-position: from-font;
	text-decoration-skip-ink: auto;
	accent-color: var(--x2-color-link);
	caret-color: var(--x2-color-link);
	scrollbar-color: var(--x2-color-scrollbar) var(--x2-bg-scrollbar, transparent);

	&::-webkit-scrollbar,
	&::-webkit-scrollbar-track {
		background-color: var(--x2-bg-scrollbar, transparent);
	}

	&::-webkit-scrollbar-thumb {
		background-color: var(--x2-color-scrollbar);
	}
}

:where(body) {
	font-family: var(--x2-font-body);
	font-size: var(--x2-text-body);
	font-kerning: normal;
	font-weight: var(--x2-text-regular);
	background-color: var(--x2-bg-body);
	color: var(--x2-color-body);
	text-rendering: optimizeLegibility;
	// See https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling
	-webkit-overflow-scrolling: touch;
}

:where(a) {
	--linkDecorationThickness: var(--x2-line-width-sm);
	color: var(--x2-color-link);
	text-decoration-line: underline;
	text-decoration-style: dotted;
	text-decoration-thickness: var(--linkDecorationThickness);

	* {
		color: currentColor;
		cursor: pointer;
		touch-action: manipulation;
		-webkit-tap-highlight-color: transparent;
	}

	&:is(:focus, :focus-within, :hover) {
		--linkDecorationThickness: var(--x2-line-width-0);
		text-decoration-style: solid;
	}

	&:active {
		text-decoration-style: double;
	}

	&:focus-visible {
		--linkDecorationThickness: var(--x2-line-width-0);
		text-decoration-style: dotted;
	}
}

:where(blockquote) {
	--x2-gap-flow: 1em;
	--blockquoteBorderWidth: 0.5ch;

	position: relative;
	padding: 0 0 0 var(--x2-padding-inline-blockquote, 1em);

	&::before {
		position: absolute;
		content: "";
		left: 0;
		inline-size: var(--blockquoteBorderWidth);
		block-size: 100%;
		border-radius: var(--x2-radius-max);
		background-color: var(--x2-border-body);
	}
}

:where(hr) {
	display: block;
	border: none;
	block-size: var(--x2-line-width-sm);
	background-color: transparent;
	background-image: radial-gradient(circle, var(--x2-color-separator) 1px, transparent 1px);
	background-size: 8px 1px;
	background-repeat: repeat;
}

:where(mark, del, ins) {
	border-radius: 0.5ch;
	padding-inline: 0.4ch;
}

:where(mark) {
	color: var(--x2-color-mark);
	background-color: var(--x2-bg-mark);
}

:where(del) {
	color: var(--x2-color-del);
	background-color: var(--x2-bg-del);

	&::before {
		display: inline-block;
		vertical-align: middle;
		margin-inline-end: 0.3ch;
		margin-block-end: 0.3ex;
		@include mixins.icon("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M8 12h8'/%3E%3C/svg%3E");
		user-select: none;
		@include mixins.fixedSize(1em);
	}
}

:where(ins) {
	color: var(--x2-color-ins);
	background-color: var(--x2-bg-ins);
	text-decoration-color: transparent;

	&::before {
		display: inline-block;
		vertical-align: middle;
		margin-inline-end: 0.3ch;
		margin-block-end: 0.3ex;
		@include mixins.icon("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M8 12h8'/%3E%3Cpath d='M12 8v8'/%3E%3C/svg%3E");
		user-select: none;
		@include mixins.fixedSize(1em);
	}
}

:where(i, em) {
	color: var(--x2-color-body-emphasis);
}

:where(b, strong) {
	font-weight: var(--x2-text-semibold);
	color: var(--x2-color-body-emphasis);
}

:where(small) {
	font-size: 0.85em;
}

:where(cite, dfn, var) {
	font-style: italic;
}

:where(sub, sup) {
	font-size: 0.8em;
}

:where(sub) {
	vertical-align: sub;
}

:where(sup) {
	vertical-align: super;
}

:where(code, kbd, samp, tt, pre) {
	font-family: var(--x2-font-code);
	font-size: 0.95em;
	border-radius: 0.5ch;
}

:where(code, kbd, samp, tt) {
	background-color: var(--x2-bg-code);
	padding-inline: 0.5ch;
}

:where(pre) {
	overflow: hidden;
	border-radius: var(--x2-radius-0);

	code {
		display: block;
		background: none;
		overflow: auto;
		border: none;
		padding: 1em 1.2em;
		font-size: 0.95em;
		white-space: pre;
	}
}

:where(details) {
	--x2-gap-flow: 1em;
	--detailsBorderRadius: calc(var(--x2-radius-xxs) + 0.25em);

	display: block;
	border: 1px solid var(--x2-border-body);
	border-radius: var(--detailsBorderRadius);
	padding: 0 1em 0;

	summary {
		background-color: var(--x2-bg-summary);
		margin: 0 -1em 0;
		padding: 0.25em 1em 0.4em;
		border-radius: var(--detailsBorderRadius);
		cursor: pointer;

		&:focus-visible {
			border-radius: var(--detailsBorderRadius);
		}
	}

	&[open] {
		padding-block-end: 1em;

		summary {
			border-block-end: 1px solid var(--x2-border-body);
			border-end-start-radius: 0;
			border-end-end-radius: 0;
		}
	}

	&:not([open]) > *:not(summary) {
		display: none;
	}
}

:where(img) {
	border-radius: var(--x2-radius-xxs);
}

:where(figcaption, caption) {
	--x2-gap-flow: 1em;

	font-size: 0.75em;
	font-style: italic;
	color: var(--x2-color-caption);
}

:where(p:empty) {
	display: none;
}

:is(h1, h2, h3, h4, h5, h6) {
	font-weight: var(--x2-text-semibold);
	// enable optical sizing
	font-variation-settings: "opsz" 28;
	color: var(--x2-color-body-emphasis);
}

:where(h1) {
	font-size: 2.5rem;
}

:where(h2) {
	font-size: 2rem;
}

:where(h3) {
	font-size: 1.5rem;
	opacity: 0.9;
}

:where(h4) {
	font-size: 1.25rem;
	opacity: 0.85;
}

:where(h5) {
	font-size: 1.125rem;
	opacity: 0.8;
}

:where(h6) {
	font-size: 1rem;
	opacity: 0.75;
}

:where(ol, ul) {
	--x2-gap-flow: 1em;

	padding-inline-start: 1em;
	list-style-position: outside;
}

:where(li) {
	--x2-gap-flow: 0.5em;
	@include mixins.flow;
}

:where(dd) {
	--x2-gap-flow: 1ch;
	padding-inline-start: 1em;
	@include mixins.flow;
}

:where(dt) {
	color: var(--x2-color-body-emphasis);
	font-weight: var(--x2-text-semibold);
}

:where(dd + dt) {
	margin-block-start: 0.5em;
}

:where(table) {
	display: block;
	inline-size: 100%;
	overflow-x: auto;

	pre {
		white-space: pre-wrap;
	}
}

:where(th) {
	font-weight: var(--x2-text-semibold);
}

:where(th, td) {
	font-size: 1em;
	padding: 0.25rem 0.75rem;
	border: 1px solid var(--x2-border-body);
}

:where(thead, tfoot) {
	tr {
		background-color: var(--x2-bg-table-active);
	}

	th,
	td {
		color: var(--x2-color-table-active);
	}
}

:where(tbody) {
	tr {
		background-color: var(--x2-bg-table, transparent);
	}
}

:where(button, button[type], input:not([type="file"]), select, textarea, [role="button"]),
:where(input[type="file"])::file-selector-button {
	--formBorderRadius: var(--x2-radius-xs);
	--x2-radius-outline: var(--formBorderRadius);
	background-color: var(--x2-bg-form);
	border: var(--x2-line-width-sm) solid var(--x2-border-form);
	border-radius: var(--formBorderRadius);
	padding: 0.2rem 0.5rem;
}

:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"], select),
:where(input[type="file"])::file-selector-button {
	color: var(--x2-color-form);
}

:where(input[type="color"]) {
	padding: 0.3rem;
	vertical-align: middle;
}

// Fix the invisible range input on Safari and apply accent color
@supports (-apple-pay-button-style: inherit) {
	:where(input[type="range"]) {
		&::-webkit-slider-runnable-track {
			background-color: var(--x2-color-link);
			height: 0.3rem;
			border-radius: var(--x2-radius-max);
		}
	
		&::-webkit-slider-thumb {
			margin-top: -6px;
		}
	}
}

:is(
	::-webkit-calendar-picker-indicator,
	::-webkit-clear-button,
	::-webkit-inner-spin-button,
	::-webkit-outer-spin-button
) {
	color: var(--x2-color-accent);
}

:where(fieldset) {
	border-radius: var(--x2-radius-xs);
	border-color: var(--x2-border-body);
	border-style: solid;
	border-width: var(--x2-line-width-sm);
}

:where(p, blockquote, figure, ul, ol, details, article) {
	@include mixins.flow;
}
