<script type="module" is:inline>
// toggle global values
function setTheme(theme) {
	window.__theme = theme;
	document.documentElement.dataset.theme = theme;
}

// set a theme and emit an event to broadcast this change
window.__setTheme = function (theme) {
	setTheme(theme);
	try {
		localStorage.setItem("theme", theme);
	} catch (err) {}
	document.firstElementChild.dispatchEvent(new Event("themechange", {
		bubbles: true, // allows this event to bubble up throughout DOM tree
		composed: true // allows other DOM elements to listen to this event
	}));
}

// watch for OS or browser preferences
const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");
prefersDarkScheme.addEventListener("change", function (event) {
	window.__setTheme(event.matches ? "dark" : "light");
});

// initialize the preferences when page loads
let currentTheme;
try {
	currentTheme = localStorage.getItem("theme");
} catch (err) {}
setTheme(currentTheme || (prefersDarkScheme.matches ? "dark" : "light"));
</script>

<script type="module" is:inline>
// toggle global values
function setDataSaverPreference(dataSaverPref) {
	window.__dataSaver = dataSaverPref;
	document.documentElement.dataset.saver = dataSaverPref;
	try {
		localStorage.setItem("data-saver", dataSaverPref);
	} catch (err) {}
}

// set data saver preference and emit an event to broadcast this change
window.__setDataSaverPreference = function (dataSaverPref) {
	setDataSaverPreference(dataSaverPref);
	document.firstElementChild.dispatchEvent(new Event("datasaverchange", {
		bubbles: true, // allows this event to bubble up throughout DOM tree
		composed: true // allows other DOM elements to listen to this event
	}));
}

// watch for OS or browser preferences
const prefersReducedData = window.matchMedia("(prefers-reduced-data: reduce)");
prefersReducedData.addEventListener("change", function (event) {
	window.__setDataSaverPreference(event.matches ? "on" : "off");
});

// initialize the preferences when page loads
// prefer queryParam over localStorage
let currentDataSaverPref;
const queryParam = (new URL(document.location)).searchParams.has("metered");
if (queryParam) {
	currentDataSaverPref = "on";
} else {
	try {
		currentDataSaverPref = localStorage.getItem("data-saver");
	} catch (err) {}
}
setDataSaverPreference(currentDataSaverPref || (prefersReducedData.matches ? "on" : "off"));
</script>

<script type="module" is:inline>
const searchOptions = {
	shouldSort: true,
	threshold: 0.2,
	location: 0,
	distance: 300,
	minMatchCharLength: 3,
	keys: ["title", "description"]
};

window.__search = function (query, searchIndex) {
	const fuse = new Fuse(searchIndex, searchOptions);
	return fuse.search(query);
}
</script>

<style is:inline>
	@font-face {
		font-family: Inter var;
		font-display: swap;
		src: url("/fonts/Inter-Regular.var.woff2") format("woff2");
		font-style: normal;
		font-weight: 100 900;
		font-named-instance: "Regular";
		/* disable optical-sizing */
		font-variation-settings: "opsz" 14;
		/* ss03=rounded quotes, cv05=small L with leg, cv06=no-spur small U */
		font-feature-settings: "ss03", "cv05", "cv06";
	}

	@font-face {
		font-family: Inter var;
		font-display: swap;
		src: url("/fonts/Inter-Italic.var.woff2") format("woff2");
		font-style: italic;
		font-weight: 100 900;
		font-named-instance: "Italic";
		font-variation-settings: "opsz" 14;
		font-feature-settings: "ss03", "cv05", "cv06";
	}

	@font-face {
		font-family: JetBrains Mono var;
		font-display: swap;
		src: url("/fonts/JetBrainsMono.var.woff2") format("woff2");
		font-style: normal;
		font-weight: 100 900;
		font-named-instance: "Regular";
	}

	@font-face {
		font-family: Inter;
		font-display: swap;
		src: url("/fonts/Inter-Regular.woff2") format("woff2");
		font-style: normal;
		font-weight: 400;
		font-variation-settings: "opsz" 14;
		font-feature-settings: "ss03", "cv05", "cv06";
	}

	@font-face {
		font-family: Inter;
		font-display: swap;
		src: url("/fonts/Inter-Italic.woff2") format("woff2");
		font-style: italic;
		font-weight: 400;
		font-variation-settings: "opsz" 14;
		font-feature-settings: "ss03", "cv05", "cv06";
	}

	@font-face {
		font-family: Inter;
		font-display: swap;
		src: url("/fonts/Inter-SemiBold.woff2") format("woff2");
		font-style: normal;
		font-weight: 600;
		font-variation-settings: "opsz" 14;
		font-feature-settings: "ss03", "cv05", "cv06";
	}

	@font-face {
		font-family: Inter;
		font-display: swap;
		src: url("/fonts/Inter-SemiBoldItalic.woff2") format("woff2");
		font-style: italic;
		font-weight: 600;
		font-variation-settings: "opsz" 14;
		font-feature-settings: "ss03", "cv05", "cv06";
	}

	@font-face {
		font-family: MakeSans;
		font-display: swap;
		src: url("/fonts/MakeSans-Black.woff2") format("woff2");
		font-style: normal;
		font-weight: 900;
	}

	@font-face {
		font-family: JetBrains Mono;
		font-display: swap;
		src: url("/fonts/JetBrainsMono-Regular.woff2") format("woff2");
		font-style: normal;
		font-weight: 400;
	}

	@font-face {
		font-family: JetBrains Mono;
		font-display: swap;
		src: url("/fonts/JetBrainsMono-SemiBold.woff2") format("woff2");
		font-style: normal;
		font-weight: 600;
	}

	:root {
		--fontSansNative: ui-sans-serif, system-ui, -apple-system,
			"Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", "Liberation Sans",
			Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
			"Segoe UI Symbol", "Noto Color Emoji";
		--fontMonoNative: ui-monospace, SFMono-Regular, "Roboto Mono",
			Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
		--fontSans1: "Inter", var(--fontSansNative);
		--fontSans2: "MakeSans", var(--fontSansNative);
		--fontMono: "JetBrains Mono", var(--fontMonoNative);

		--x2-text-sm: calc(0.8rem + 0.15vw);
		--x2-text-0: calc(0.95rem + 0.2vw);

		--x2-text-title: calc(1.7rem + 2.5vw);
		--x2-text-tagline: calc(1.25rem + 0.3vw);

		--x2-size-icon-0: 1.5rem;
	}
	@supports (font-variation-settings: normal) {
		:root {
			--fontSans1: "Inter var", var(--fontSansNative);
			--fontMono: "JetBrains Mono var", var(--fontMonoNative);
		}
	}
	@media (prefers-reduced-data: reduce) {
		:root:not([data-saver]) {
			--fontSans1: var(--fontSansNative);
			--fontSans2: var(--fontSansNative);
			--fontMono: var(--fontMonoNative);
		}
	}
	[data-saver="on"] {
		--fontSans1: var(--fontSansNative);
		--fontSans2: var(--fontSansNative);
		--fontMono: var(--fontMonoNative);
	}
	@media (pointer: coarse), (any-hover: none) {
		:root {
			--x2-size-icon-0: 24px;
		}
	}
	.icon {
		--iconSize: var(--x2-size-icon, var(--x2-size-icon-0));
		display: inline-block;
		vertical-align: text-bottom;
		stroke: currentColor;
		stroke-width: 2;
		fill: none;
		width: var(--iconSize);
		height: var(--iconSize);
		min-width: var(--iconSize);
		min-height: var(--iconSize);
	}
</style>
