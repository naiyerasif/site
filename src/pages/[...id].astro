---
import { getCollection, render } from "astro:content";
import Icon from "../components/Icon.astro";
import Time from "../components/Time.astro";
import Toc from "../components/Toc.astro";
import Layout from "../layouts/Layout.astro";
import format, { compare, format_date } from "../modules/datetime/index.js";
import toc from "../modules/table-of-contents/index.js";
import siteInfo from "../modules/website/index.js";

export async function getStaticPaths() {
	const pages = await getCollection("page");
	return pages.map(entry => ({
			params: { id: entry.id },
			props: { entry }
		}));
}

const { entry } = Astro.props;
const { data } = entry;
const { Content, headings } = await render(entry);
const showToc = data.showToc && headings && headings.length > 0;
const showUpdate = compare(data.update, data.date) !== 0;

const pageInfo = {
	title: data.title,
	description: data.description,
	url: Astro.url.pathname,
	published: format(data.date, format_date),
	updated: showUpdate ? format(data.update, format_date) : undefined,
};
---

<Layout {pageInfo} class="popout">
	<Fragment slot="hero">
		<div class="hero-body">
			<hgroup>
				<h1>{data.title}</h1>
				{data.tagline && <p>{data.tagline}</p>}
			</hgroup>
		</div>
		<div class="hero-footer">
			<span><Icon name="calendar"/> Published on <Time date={data.date} /></span>{showUpdate && <span><Icon name="calendar-edit"/> Updated on <Time date={data.update} /></span>}
		</div>
	</Fragment>
	<article class="post">
		{showToc && <nav class="toc">
			<div class="toc-header">Table of Contents</div>
			<Toc headings={toc(headings, siteInfo.maxTocDepth)}/>
		</nav>}
		<Content/>
	</article>
</Layout>
