---
import { getCollection, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Icon from "../../components/Icon.astro";
import Toc from "../../components/Toc.astro";
import Time from "../../components/Time.astro";
import format, { compare, format_date } from "../../modules/datetime/index.js";
import toc from "../../modules/table-of-contents/index.js";
import siteInfo from "../../modules/website/index.js";
import { Status } from "../../modules/schema/defs.js";

export async function getStaticPaths() {
	const posts = await getCollection("archive");
	return posts.sort((p1, p2) => compare(p1.data.date, p2.data.date))
		.map(post => ({
			params: { id: post.id },
			props: { post }
		}));
}

const { post } = Astro.props;
const { data } = post;
const { Content, headings } = await render(post);
const url = Astro.url.pathname;
const showToc = data.showToc && headings && headings.length > 0;
const showUpdate = compare(data.update, data.date) !== 0;
const status = Status.archived;

const pageInfo = {
	title: `${data.title} (${status.label})`,
	description: data.description,
	url,
	source: post.filePath,
	type: "article",
	published: format(data.date, format_date),
	updated: showUpdate ? format(data.update, format_date) : undefined
};
---

<Layout {pageInfo} class="popout">
	<Fragment slot="hero">
		<div class="hero-body">
			<hgroup>
				<h1>{data.title}</h1>
				{data.tagline && <p>{data.tagline}</p>}
			</hgroup>
		</div>
		<div class="hero-footer">
			<span><Icon name="calendar"/> Published on <Time date={data.date} /></span>{showUpdate && <span class="update"><Icon name="calendar-edit"/> Updated on <Time date={data.update} /></span>}<span class={`chip chip-${status.tone.id}`}>{status.label}</span>
		</div>
	</Fragment>
	<article class="post">
		{showToc && <nav class="toc">
			<div class="toc-header">Table of Contents</div>
			<Toc headings={toc(headings, siteInfo.maxTocDepth)}/>
		</nav>}
		<Content/>
	</article>
</Layout>
