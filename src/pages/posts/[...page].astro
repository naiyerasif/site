---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import PostCard from "../../components/PostCard.astro";
import NoteCard from "../../components/NoteCard.astro";
import Pagination from "../../components/Pagination.astro";
import siteInfo from "../../modules/website/index.js";
import { compare } from "../../modules/datetime/index.js";
import { PostType, Status } from "../../modules/schema/defs.js";

export async function getStaticPaths({ paginate }) {
	const posts = (await getCollection("post"))
		.filter(post => post.data.state !== Status.outdated.id)
		.sort((p1, p2) => compare(p1.data.date, p2.data.date));
	return paginate(posts, { pageSize: siteInfo.maxPageItems });
}

const { page } = Astro.props;
const host = new URL(siteInfo.siteBase).hostname;

const pageInfo = {
	title: `Posts (Page ${page.currentPage})`,
	description: `Posts on ${host}`,
	url: Astro.url.pathname,
	previous: page?.url?.prev,
	next: page?.url?.next
};
---

<Layout {pageInfo} class="feed">
	<Fragment slot="hero">
		<div class="hero-body">
			<hgroup>
				<h1>Posts</h1>
				<p>{page.start + 1}&hellip;{page.end + 1} of {page.total} posts</p>
			</hgroup>
		</div>
	</Fragment>
	{page.data.map(entry => entry.data.type === PostType.note.id ? <NoteCard {entry} /> : <PostCard {entry} />)}
	<div slot="sidekick" class="sidekick-items">
		<Pagination currentPage={page.currentPage} totalPages={page.lastPage} base="posts"/>
	</div>
</Layout>
